{"ast":null,"code":"/* -*- Mode: js; js-indent-level: 2; -*- */\n\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n  var define = require('amdefine')(module, require);\n}\n\ndefine(function (require, exports, module) {\n  var base64VLQ = require('./base64-vlq');\n\n  var util = require('./util');\n\n  var ArraySet = require('./array-set').ArraySet;\n\n  var MappingList = require('./mapping-list').MappingList;\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n\n\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n\n  SourceMapGenerator.fromSourceMap = function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n\n\n  SourceMapGenerator.prototype.addMapping = function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null && !this._sources.has(source)) {\n      this._sources.add(source);\n    }\n\n    if (name != null && !this._names.has(name)) {\n      this._names.add(name);\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n  /**\n   * Set the source content for a source file.\n   */\n\n\n  SourceMapGenerator.prototype.setSourceContent = function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = {};\n      }\n\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n\n\n  SourceMapGenerator.prototype.applySourceMap = function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile; // If aSourceFile is omitted, we will use the file property of the SourceMap\n\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error('SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' + 'or the source map\\'s \"file\" property. Both were omitted.');\n      }\n\n      sourceFile = aSourceMapConsumer.file;\n    }\n\n    var sourceRoot = this._sourceRoot; // Make \"sourceFile\" relative if an absolute Url is passed.\n\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    } // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n\n\n    var newSources = new ArraySet();\n    var newNames = new ArraySet(); // Find mappings for the \"sourceFile\"\n\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source);\n          }\n\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n    }, this);\n\n    this._sources = newSources;\n    this._names = newNames; // Copy sourcesContents of applied map.\n\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n\n\n  SourceMapGenerator.prototype._validateMapping = function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource, aName) {\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aGenerated.line > 0 && aGenerated.column >= 0 && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    } else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated && aOriginal && 'line' in aOriginal && 'column' in aOriginal && aGenerated.line > 0 && aGenerated.column >= 0 && aOriginal.line > 0 && aOriginal.column >= 0 && aSource) {\n      // Cases 2 and 3.\n      return;\n    } else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n\n\n  SourceMapGenerator.prototype._serializeMappings = function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var mapping;\n\n    var mappings = this._mappings.toArray();\n\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          result += ';';\n          previousGeneratedLine++;\n        }\n      } else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n\n          result += ',';\n        }\n      }\n\n      result += base64VLQ.encode(mapping.generatedColumn - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        result += base64VLQ.encode(this._sources.indexOf(mapping.source) - previousSource);\n        previousSource = this._sources.indexOf(mapping.source); // lines are stored 0-based in SourceMap spec version 3\n\n        result += base64VLQ.encode(mapping.originalLine - 1 - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n        result += base64VLQ.encode(mapping.originalColumn - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          result += base64VLQ.encode(this._names.indexOf(mapping.name) - previousName);\n          previousName = this._names.indexOf(mapping.name);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  SourceMapGenerator.prototype._generateSourcesContent = function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key) ? this._sourcesContents[key] : null;\n    }, this);\n  };\n  /**\n   * Externalize the source map.\n   */\n\n\n  SourceMapGenerator.prototype.toJSON = function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n\n    if (this._file != null) {\n      map.file = this._file;\n    }\n\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n  /**\n   * Render the source map being generated to a string.\n   */\n\n\n  SourceMapGenerator.prototype.toString = function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n});","map":{"version":3,"sources":["/home/safouman/Desktop/Coding/crwn-clothing/node_modules/source-map/lib/source-map/source-map-generator.js"],"names":["define","require","module","exports","base64VLQ","util","ArraySet","MappingList","SourceMapGenerator","aArgs","_file","getArg","_sourceRoot","_skipValidation","_sources","_names","_mappings","_sourcesContents","prototype","_version","fromSourceMap","SourceMapGenerator_fromSourceMap","aSourceMapConsumer","sourceRoot","generator","file","eachMapping","mapping","newMapping","generated","line","generatedLine","column","generatedColumn","source","relative","original","originalLine","originalColumn","name","addMapping","sources","forEach","sourceFile","content","sourceContentFor","setSourceContent","SourceMapGenerator_addMapping","_validateMapping","has","add","SourceMapGenerator_setSourceContent","aSourceFile","aSourceContent","toSetString","Object","keys","length","applySourceMap","SourceMapGenerator_applySourceMap","aSourceMapPath","Error","newSources","newNames","unsortedForEach","originalPositionFor","join","SourceMapGenerator_validateMapping","aGenerated","aOriginal","aSource","aName","JSON","stringify","_serializeMappings","SourceMapGenerator_serializeMappings","previousGeneratedColumn","previousGeneratedLine","previousOriginalColumn","previousOriginalLine","previousName","previousSource","result","mappings","toArray","i","len","compareByGeneratedPositionsInflated","encode","indexOf","_generateSourcesContent","SourceMapGenerator_generateSourcesContent","aSources","aSourceRoot","map","key","hasOwnProperty","call","toJSON","SourceMapGenerator_toJSON","version","names","sourcesContent","toString","SourceMapGenerator_toString"],"mappings":"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","sourcesContent":["/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\nif (typeof define !== 'function') {\n    var define = require('amdefine')(module, require);\n}\ndefine(function (require, exports, module) {\n\n  var base64VLQ = require('./base64-vlq');\n  var util = require('./util');\n  var ArraySet = require('./array-set').ArraySet;\n  var MappingList = require('./mapping-list').MappingList;\n\n  /**\n   * An instance of the SourceMapGenerator represents a source map which is\n   * being built incrementally. You may pass an object with the following\n   * properties:\n   *\n   *   - file: The filename of the generated source.\n   *   - sourceRoot: A root for all relative URLs in this source map.\n   */\n  function SourceMapGenerator(aArgs) {\n    if (!aArgs) {\n      aArgs = {};\n    }\n    this._file = util.getArg(aArgs, 'file', null);\n    this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n    this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n    this._sources = new ArraySet();\n    this._names = new ArraySet();\n    this._mappings = new MappingList();\n    this._sourcesContents = null;\n  }\n\n  SourceMapGenerator.prototype._version = 3;\n\n  /**\n   * Creates a new SourceMapGenerator based on a SourceMapConsumer\n   *\n   * @param aSourceMapConsumer The SourceMap.\n   */\n  SourceMapGenerator.fromSourceMap =\n    function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n      var sourceRoot = aSourceMapConsumer.sourceRoot;\n      var generator = new SourceMapGenerator({\n        file: aSourceMapConsumer.file,\n        sourceRoot: sourceRoot\n      });\n      aSourceMapConsumer.eachMapping(function (mapping) {\n        var newMapping = {\n          generated: {\n            line: mapping.generatedLine,\n            column: mapping.generatedColumn\n          }\n        };\n\n        if (mapping.source != null) {\n          newMapping.source = mapping.source;\n          if (sourceRoot != null) {\n            newMapping.source = util.relative(sourceRoot, newMapping.source);\n          }\n\n          newMapping.original = {\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          };\n\n          if (mapping.name != null) {\n            newMapping.name = mapping.name;\n          }\n        }\n\n        generator.addMapping(newMapping);\n      });\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          generator.setSourceContent(sourceFile, content);\n        }\n      });\n      return generator;\n    };\n\n  /**\n   * Add a single mapping from original source line and column to the generated\n   * source's line and column for this source map being created. The mapping\n   * object should have the following properties:\n   *\n   *   - generated: An object with the generated line and column positions.\n   *   - original: An object with the original line and column positions.\n   *   - source: The original source file (relative to the sourceRoot).\n   *   - name: An optional original token name for this mapping.\n   */\n  SourceMapGenerator.prototype.addMapping =\n    function SourceMapGenerator_addMapping(aArgs) {\n      var generated = util.getArg(aArgs, 'generated');\n      var original = util.getArg(aArgs, 'original', null);\n      var source = util.getArg(aArgs, 'source', null);\n      var name = util.getArg(aArgs, 'name', null);\n\n      if (!this._skipValidation) {\n        this._validateMapping(generated, original, source, name);\n      }\n\n      if (source != null && !this._sources.has(source)) {\n        this._sources.add(source);\n      }\n\n      if (name != null && !this._names.has(name)) {\n        this._names.add(name);\n      }\n\n      this._mappings.add({\n        generatedLine: generated.line,\n        generatedColumn: generated.column,\n        originalLine: original != null && original.line,\n        originalColumn: original != null && original.column,\n        source: source,\n        name: name\n      });\n    };\n\n  /**\n   * Set the source content for a source file.\n   */\n  SourceMapGenerator.prototype.setSourceContent =\n    function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n      var source = aSourceFile;\n      if (this._sourceRoot != null) {\n        source = util.relative(this._sourceRoot, source);\n      }\n\n      if (aSourceContent != null) {\n        // Add the source content to the _sourcesContents map.\n        // Create a new _sourcesContents map if the property is null.\n        if (!this._sourcesContents) {\n          this._sourcesContents = {};\n        }\n        this._sourcesContents[util.toSetString(source)] = aSourceContent;\n      } else if (this._sourcesContents) {\n        // Remove the source file from the _sourcesContents map.\n        // If the _sourcesContents map is empty, set the property to null.\n        delete this._sourcesContents[util.toSetString(source)];\n        if (Object.keys(this._sourcesContents).length === 0) {\n          this._sourcesContents = null;\n        }\n      }\n    };\n\n  /**\n   * Applies the mappings of a sub-source-map for a specific source file to the\n   * source map being generated. Each mapping to the supplied source file is\n   * rewritten using the supplied source map. Note: The resolution for the\n   * resulting mappings is the minimium of this map and the supplied map.\n   *\n   * @param aSourceMapConsumer The source map to be applied.\n   * @param aSourceFile Optional. The filename of the source file.\n   *        If omitted, SourceMapConsumer's file property will be used.\n   * @param aSourceMapPath Optional. The dirname of the path to the source map\n   *        to be applied. If relative, it is relative to the SourceMapConsumer.\n   *        This parameter is needed when the two source maps aren't in the same\n   *        directory, and the source map to be applied contains relative source\n   *        paths. If so, those relative source paths need to be rewritten\n   *        relative to the SourceMapGenerator.\n   */\n  SourceMapGenerator.prototype.applySourceMap =\n    function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n      var sourceFile = aSourceFile;\n      // If aSourceFile is omitted, we will use the file property of the SourceMap\n      if (aSourceFile == null) {\n        if (aSourceMapConsumer.file == null) {\n          throw new Error(\n            'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n            'or the source map\\'s \"file\" property. Both were omitted.'\n          );\n        }\n        sourceFile = aSourceMapConsumer.file;\n      }\n      var sourceRoot = this._sourceRoot;\n      // Make \"sourceFile\" relative if an absolute Url is passed.\n      if (sourceRoot != null) {\n        sourceFile = util.relative(sourceRoot, sourceFile);\n      }\n      // Applying the SourceMap can add and remove items from the sources and\n      // the names array.\n      var newSources = new ArraySet();\n      var newNames = new ArraySet();\n\n      // Find mappings for the \"sourceFile\"\n      this._mappings.unsortedForEach(function (mapping) {\n        if (mapping.source === sourceFile && mapping.originalLine != null) {\n          // Check if it can be mapped by the source map, then update the mapping.\n          var original = aSourceMapConsumer.originalPositionFor({\n            line: mapping.originalLine,\n            column: mapping.originalColumn\n          });\n          if (original.source != null) {\n            // Copy mapping\n            mapping.source = original.source;\n            if (aSourceMapPath != null) {\n              mapping.source = util.join(aSourceMapPath, mapping.source)\n            }\n            if (sourceRoot != null) {\n              mapping.source = util.relative(sourceRoot, mapping.source);\n            }\n            mapping.originalLine = original.line;\n            mapping.originalColumn = original.column;\n            if (original.name != null) {\n              mapping.name = original.name;\n            }\n          }\n        }\n\n        var source = mapping.source;\n        if (source != null && !newSources.has(source)) {\n          newSources.add(source);\n        }\n\n        var name = mapping.name;\n        if (name != null && !newNames.has(name)) {\n          newNames.add(name);\n        }\n\n      }, this);\n      this._sources = newSources;\n      this._names = newNames;\n\n      // Copy sourcesContents of applied map.\n      aSourceMapConsumer.sources.forEach(function (sourceFile) {\n        var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n        if (content != null) {\n          if (aSourceMapPath != null) {\n            sourceFile = util.join(aSourceMapPath, sourceFile);\n          }\n          if (sourceRoot != null) {\n            sourceFile = util.relative(sourceRoot, sourceFile);\n          }\n          this.setSourceContent(sourceFile, content);\n        }\n      }, this);\n    };\n\n  /**\n   * A mapping can have one of the three levels of data:\n   *\n   *   1. Just the generated position.\n   *   2. The Generated position, original position, and original source.\n   *   3. Generated and original position, original source, as well as a name\n   *      token.\n   *\n   * To maintain consistency, we validate that any new mapping being added falls\n   * in to one of these categories.\n   */\n  SourceMapGenerator.prototype._validateMapping =\n    function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                                aName) {\n      if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n          && aGenerated.line > 0 && aGenerated.column >= 0\n          && !aOriginal && !aSource && !aName) {\n        // Case 1.\n        return;\n      }\n      else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n               && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n               && aGenerated.line > 0 && aGenerated.column >= 0\n               && aOriginal.line > 0 && aOriginal.column >= 0\n               && aSource) {\n        // Cases 2 and 3.\n        return;\n      }\n      else {\n        throw new Error('Invalid mapping: ' + JSON.stringify({\n          generated: aGenerated,\n          source: aSource,\n          original: aOriginal,\n          name: aName\n        }));\n      }\n    };\n\n  /**\n   * Serialize the accumulated mappings in to the stream of base 64 VLQs\n   * specified by the source map format.\n   */\n  SourceMapGenerator.prototype._serializeMappings =\n    function SourceMapGenerator_serializeMappings() {\n      var previousGeneratedColumn = 0;\n      var previousGeneratedLine = 1;\n      var previousOriginalColumn = 0;\n      var previousOriginalLine = 0;\n      var previousName = 0;\n      var previousSource = 0;\n      var result = '';\n      var mapping;\n\n      var mappings = this._mappings.toArray();\n      for (var i = 0, len = mappings.length; i < len; i++) {\n        mapping = mappings[i];\n\n        if (mapping.generatedLine !== previousGeneratedLine) {\n          previousGeneratedColumn = 0;\n          while (mapping.generatedLine !== previousGeneratedLine) {\n            result += ';';\n            previousGeneratedLine++;\n          }\n        }\n        else {\n          if (i > 0) {\n            if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n              continue;\n            }\n            result += ',';\n          }\n        }\n\n        result += base64VLQ.encode(mapping.generatedColumn\n                                   - previousGeneratedColumn);\n        previousGeneratedColumn = mapping.generatedColumn;\n\n        if (mapping.source != null) {\n          result += base64VLQ.encode(this._sources.indexOf(mapping.source)\n                                     - previousSource);\n          previousSource = this._sources.indexOf(mapping.source);\n\n          // lines are stored 0-based in SourceMap spec version 3\n          result += base64VLQ.encode(mapping.originalLine - 1\n                                     - previousOriginalLine);\n          previousOriginalLine = mapping.originalLine - 1;\n\n          result += base64VLQ.encode(mapping.originalColumn\n                                     - previousOriginalColumn);\n          previousOriginalColumn = mapping.originalColumn;\n\n          if (mapping.name != null) {\n            result += base64VLQ.encode(this._names.indexOf(mapping.name)\n                                       - previousName);\n            previousName = this._names.indexOf(mapping.name);\n          }\n        }\n      }\n\n      return result;\n    };\n\n  SourceMapGenerator.prototype._generateSourcesContent =\n    function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n      return aSources.map(function (source) {\n        if (!this._sourcesContents) {\n          return null;\n        }\n        if (aSourceRoot != null) {\n          source = util.relative(aSourceRoot, source);\n        }\n        var key = util.toSetString(source);\n        return Object.prototype.hasOwnProperty.call(this._sourcesContents,\n                                                    key)\n          ? this._sourcesContents[key]\n          : null;\n      }, this);\n    };\n\n  /**\n   * Externalize the source map.\n   */\n  SourceMapGenerator.prototype.toJSON =\n    function SourceMapGenerator_toJSON() {\n      var map = {\n        version: this._version,\n        sources: this._sources.toArray(),\n        names: this._names.toArray(),\n        mappings: this._serializeMappings()\n      };\n      if (this._file != null) {\n        map.file = this._file;\n      }\n      if (this._sourceRoot != null) {\n        map.sourceRoot = this._sourceRoot;\n      }\n      if (this._sourcesContents) {\n        map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n      }\n\n      return map;\n    };\n\n  /**\n   * Render the source map being generated to a string.\n   */\n  SourceMapGenerator.prototype.toString =\n    function SourceMapGenerator_toString() {\n      return JSON.stringify(this.toJSON());\n    };\n\n  exports.SourceMapGenerator = SourceMapGenerator;\n\n});\n"]},"metadata":{},"sourceType":"script"}